define(["exports"],function(_exports){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.drawDashedRect=function(svgRect,hostProps,dashProps){const{width,height,borderRadius}=hostProps,validDashProps=_validateRectDashProps(hostProps,dashProps);_drawRect(svgRect,width,height,borderRadius,validDashProps.dashWidth);const{strokeDasharray,strokeDashOffset}=_calculateRectStrokeDasharray(hostProps,validDashProps);_drawDash(svgRect,strokeDasharray,strokeDashOffset)};function _drawRect(svgRect,width,height,borderRadius,strokeWidth){svgRect.setAttribute("stroke-width",strokeWidth);svgRect.setAttribute("x",strokeWidth/2);svgRect.setAttribute("y",strokeWidth/2);svgRect.setAttribute("width",width-strokeWidth);svgRect.setAttribute("height",height-strokeWidth);svgRect.setAttribute("rx",borderRadius);svgRect.setAttribute("ry",borderRadius);return svgRect}function _drawDash(svgRect,strokeDasharray,strokeDashOffset){svgRect.setAttribute("stroke-dasharray",strokeDasharray);svgRect.setAttribute("stroke-dashoffset",strokeDashOffset)}function _calculateRectStrokeDasharray(hostProps,dashProps){const{width,height,borderRadius}=hostProps,{dashWidth,dashLength,dashRatio}=_validateRectDashProps(hostProps,dashProps),lineX=width-dashWidth-2*borderRadius,lineY=height-dashWidth-2*borderRadius,arcCorner=2*Math.PI*borderRadius/4,dashCountX=_calculatePathDashCount(lineX,{dashLength,dashRatio}),dashCountY=_calculatePathDashCount(lineY,{dashLength,dashRatio}),dashCountCorner=_calculatePathDashCount(arcCorner,{dashLength,dashRatio}),dashSpacingX=_calculatePathDashSpacing(lineX,dashCountX,dashLength),dashSpacingY=_calculatePathDashSpacing(lineY,dashCountY,dashLength),dashSpacingCorner=_calculatePathDashSpacing(arcCorner,dashCountCorner,dashLength),strokeDashArrayX=_calculatePathStrokeDasharray(dashCountX,dashSpacingX,dashSpacingCorner,dashLength),strokeDashArrayCorner1=_calculatePathStrokeDasharray(dashCountCorner,dashSpacingCorner,dashSpacingY,dashLength),strokeDasharrayY=_calculatePathStrokeDasharray(dashCountY,dashSpacingY,dashSpacingCorner,dashLength),strokeDashArrayCorner2=_calculatePathStrokeDasharray(dashCountCorner,dashSpacingCorner,dashSpacingX,dashLength),strokeDasharray=`${strokeDashArrayX}${strokeDashArrayCorner1}${strokeDasharrayY}${strokeDashArrayCorner2}`.trim();return{strokeDasharray,strokeDashOffset:-dashSpacingX,dashWidth}}function _validateRectDashProps(hostProps,dashProps){const{width,height}=hostProps;let{dashWidth,dashLength,dashRatio}=dashProps;if(0>dashWidth||0>dashLength||0>dashRatio){throw new Error(`dashWidth, dashLength and dashRatio must be positive numbers`)}const ref=Math.min(width,height);dashLength=dashLength>ref?ref:dashLength;dashWidth=dashWidth>ref/2?ref/2:dashWidth;dashRatio=dashLength*(1+dashRatio)>ref?ref-dashLength:dashRatio;return{dashWidth,dashLength,dashRatio}}function _calculatePathDashCount(pathLength,dashProps){const{dashLength,dashRatio}=dashProps;if(0>=pathLength-dashRatio*dashLength)return 0;return Math.floor((pathLength-dashRatio*dashLength)/((1+dashRatio)*dashLength))}function _calculatePathDashSpacing(pathLength,dashCount,dashLength){if(0===dashCount)return pathLength/2;return Math.round(1000*((pathLength-dashCount*dashLength)/(dashCount+1)))/1000}function _calculatePathStrokeDasharray(dashCount,dashSpacing,adjacentdashSpacing,dashLength){if(0===dashCount)return`0 ${dashSpacing+adjacentdashSpacing} `;return`${dashLength} ${dashSpacing} `.repeat(dashCount-1)+`${dashLength} ${dashSpacing+adjacentdashSpacing} `}});