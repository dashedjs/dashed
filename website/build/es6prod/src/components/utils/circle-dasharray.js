define(["exports"],function(_exports){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.drawDashedCircle=function(svgCircle,circleProps,dashProps){const{width,height}=circleProps,validDashProps=_validateLineDashProps(circleProps,dashProps);_drawCircle(svgCircle,width,height,validDashProps.dashWidth);const{strokeDasharray,strokeDashOffset}=_calculateCircleStrokeDasharray(circleProps,validDashProps);_drawDash(svgCircle,strokeDasharray,strokeDashOffset)};var _Mathmin=Math.min;function _drawCircle(svgCircle,width,height,strokeWidth){const radius=(_Mathmin(width,height)-strokeWidth)/2;svgCircle.setAttribute("stroke-width",strokeWidth);svgCircle.setAttribute("cx",width/2);svgCircle.setAttribute("cy",height/2);svgCircle.setAttribute("r",radius);return svgCircle}function _drawDash(svgCircle,strokeDasharray,strokeDashOffset){svgCircle.setAttribute("stroke-dasharray",strokeDasharray);svgCircle.setAttribute("stroke-dashoffset",strokeDashOffset)}function _calculateCircleStrokeDasharray(hostProps,dashProps){const{width,height}=hostProps,{dashWidth,dashLength,dashRatio}=_validateLineDashProps(hostProps,dashProps),radius=(_Mathmin(width,height)-dashWidth)/2,circonference=2*Math.PI*radius,dashCount=Math.floor((circonference-dashRatio*dashLength)/((1+dashRatio)*dashLength)),dashSpacing=Math.round(1000*((circonference-dashCount*dashLength)/(dashCount+1)))/1000;return{strokeDasharray:`${dashLength} ${dashSpacing}`,strokeDashOffset:0,dashWidth}}function _validateLineDashProps(hostProps,dashProps){const{width,height}=hostProps;let{dashWidth,dashLength,dashRatio}=dashProps;if(0>dashWidth||0>dashLength||0>dashRatio){throw new Error(`dashWidth, dashLength and dashRatio must be positive numbers`)}const ref=_Mathmin(width,height);dashLength=dashLength>ref?ref:dashLength;dashWidth=dashWidth>ref/2?ref/2:dashWidth;dashRatio=dashLength*(1+dashRatio)>ref?ref-dashLength:dashRatio;return{dashWidth,dashLength,dashRatio}}});