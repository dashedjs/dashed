const t=`{{lit-${String(Math.random()).slice(2)}}}`,e=`\x3c!--${t}--\x3e`,s=(()=>{const t=document.createElement("div");return t.setAttribute("style","{{bad value}}"),"{{bad value}}"!==t.getAttribute("style")})(),i=t=>-1!==t.index,n=()=>document.createComment(""),o=/([ \x09\x0a\x0c\x0d])([^\0-\x1F\x7F-\x9F \x09\x0a\x0c\x0d"'>=\/]+)([ \x09\x0a\x0c\x0d]*=[ \x09\x0a\x0c\x0d]*(?:[^ \x09\x0a\x0c\x0d"'`<>=]*|"[^"]*|'[^']*))$/,a=(NodeFilter.SHOW_ELEMENT,NodeFilter.SHOW_COMMENT,NodeFilter.SHOW_TEXT,void 0!==window.customElements&&void 0!==window.customElements.polyfillWrapFlushCallback),l=(t,e,s=null)=>{let i=e;for(;i!==s;){const e=i.nextSibling;t.removeChild(i),i=e}},r=new WeakMap,h=t=>"function"==typeof t&&r.has(t),d={};class c{constructor(t,e,s){this._parts=[],this.template=t,this.processor=e,this._getTemplate=s}update(t){let e=0;for(const s of this._parts)void 0!==s&&s.setValue(t[e]),e++;for(const t of this._parts)void 0!==t&&t.commit()}_clone(){const t=a?this.template.element.content.cloneNode(!0):document.importNode(this.template.element.content,!0),e=this.template.parts;let s=0,n=0;const o=t=>{const a=document.createTreeWalker(t,133,null,!1);let l=a.nextNode();for(;s<e.length&&null!==l;){const t=e[s];if(i(t))if(n===t.index){if("node"===t.type){const t=this.processor.handleTextExpression(this._getTemplate);t.insertAfterNode(l),this._parts.push(t)}else this._parts.push(...this.processor.handleAttributeExpressions(l,t.name,t.strings));s++}else n++,"TEMPLATE"===l.nodeName&&o(l.content),l=a.nextNode();else this._parts.push(void 0),s++}};return o(t),a&&(document.adoptNode(t),customElements.upgrade(t)),t}}class u{constructor(t,e,s,i){this.strings=t,this.values=e,this.type=s,this.processor=i}getHTML(){const i=this.strings.length-1;let n="",a=!0;for(let l=0;l<i;l++){const i=this.strings[l];n+=i;const r=i.lastIndexOf(">");!(a=(r>-1||a)&&-1===i.indexOf("<",r+1))&&s&&(n=n.replace(o,(t,e,s,i)=>"style"===s?`${e}style$${i}`:t)),n+=a?e:t}return n+=this.strings[i]}getTemplateElement(){const t=document.createElement("template");return t.innerHTML=this.getHTML(),t}}const m=t=>null===t||!("object"==typeof t||"function"==typeof t);class p{constructor(t,e,s){this.dirty=!0,this.element=t,this.name=e,this.strings=s,this.parts=[];for(let t=0;t<s.length-1;t++)this.parts[t]=this._createPart()}_createPart(){return new g(this)}_getValue(){const t=this.strings,e=t.length-1;let s="";for(let i=0;i<e;i++){s+=t[i];const e=this.parts[i];if(void 0!==e){const t=e.value;if(null!=t&&(Array.isArray(t)||"string"!=typeof t&&t[Symbol.iterator]))for(const e of t)s+="string"==typeof e?e:String(e);else s+="string"==typeof t?t:String(t)}}return s+=t[e]}commit(){this.dirty&&(this.dirty=!1,this.element.setAttribute(this.name,this._getValue()))}}class g{constructor(t){this.value=void 0,this.committer=t}setValue(t){t===d||m(t)&&t===this.value||(this.value=t,h(t)||(this.committer.dirty=!0))}commit(){for(;h(this.value);){const t=this.value;this.value=d,t(this)}this.value!==d&&this.committer.commit()}}class v{constructor(t){this.value=void 0,this._pendingValue=void 0,this.templateFactory=t}appendInto(t){this.startNode=t.appendChild(n()),this.endNode=t.appendChild(n())}insertAfterNode(t){this.startNode=t,this.endNode=t.nextSibling}appendIntoPart(t){t._insert(this.startNode=n()),t._insert(this.endNode=n())}insertAfterPart(t){t._insert(this.startNode=n()),this.endNode=t.endNode,t.endNode=this.startNode}setValue(t){this._pendingValue=t}commit(){for(;h(this._pendingValue);){const t=this._pendingValue;this._pendingValue=d,t(this)}const t=this._pendingValue;t!==d&&(m(t)?t!==this.value&&this._commitText(t):t instanceof u?this._commitTemplateResult(t):t instanceof Node?this._commitNode(t):Array.isArray(t)||t[Symbol.iterator]?this._commitIterable(t):void 0!==t.then?this._commitPromise(t):this._commitText(t))}_insert(t){this.endNode.parentNode.insertBefore(t,this.endNode)}_commitNode(t){this.value!==t&&(this.clear(),this._insert(t),this.value=t)}_commitText(t){const e=this.startNode.nextSibling;t=null==t?"":t,e===this.endNode.previousSibling&&e.nodeType===Node.TEXT_NODE?e.textContent=t:this._commitNode(document.createTextNode("string"==typeof t?t:String(t))),this.value=t}_commitTemplateResult(t){const e=this.templateFactory(t);if(this.value&&this.value.template===e)this.value.update(t.values);else{const s=new c(e,t.processor,this.templateFactory),i=s._clone();s.update(t.values),this._commitNode(i),this.value=s}}_commitIterable(t){Array.isArray(this.value)||(this.value=[],this.clear());const e=this.value;let s,i=0;for(const n of t)void 0===(s=e[i])&&(s=new v(this.templateFactory),e.push(s),0===i?s.appendIntoPart(this):s.insertAfterPart(e[i-1])),s.setValue(n),s.commit(),i++;i<e.length&&(e.length=i,this.clear(s&&s.endNode))}_commitPromise(t){this.value=t,t.then(e=>{this.value===t&&(this.setValue(e),this.commit())})}clear(t=this.startNode){l(this.startNode.parentNode,t.nextSibling,this.endNode)}}class f{constructor(t,e,s){if(this.value=void 0,this._pendingValue=void 0,2!==s.length||""!==s[0]||""!==s[1])throw new Error("Boolean attributes can only contain a single expression");this.element=t,this.name=e,this.strings=s}setValue(t){this._pendingValue=t}commit(){for(;h(this._pendingValue);){const t=this._pendingValue;this._pendingValue=d,t(this)}if(this._pendingValue===d)return;const t=!!this._pendingValue;this.value!==t&&(t?this.element.setAttribute(this.name,""):this.element.removeAttribute(this.name)),this.value=t,this._pendingValue=d}}class _ extends p{constructor(t,e,s){super(t,e,s),this.single=2===s.length&&""===s[0]&&""===s[1]}_createPart(){return new x(this)}_getValue(){return this.single?this.parts[0].value:super._getValue()}commit(){this.dirty&&(this.dirty=!1,this.element[this.name]=this._getValue())}}class x extends g{}class y{constructor(t,e){this.value=void 0,this._pendingValue=void 0,this.element=t,this.eventName=e}setValue(t){this._pendingValue=t}commit(){for(;h(this._pendingValue);){const t=this._pendingValue;this._pendingValue=d,t(this)}this._pendingValue!==d&&(null==this._pendingValue!=(null==this.value)&&(null==this._pendingValue?this.element.removeEventListener(this.eventName,this):this.element.addEventListener(this.eventName,this)),this.value=this._pendingValue,this._pendingValue=d)}handleEvent(t){"function"==typeof this.value?this.value.call(this.element,t):"function"==typeof this.value.handleEvent&&this.value.handleEvent(t)}}const b=new class{handleAttributeExpressions(t,e,s){const i=e[0];return"."===i?new _(t,e.slice(1),s).parts:"@"===i?[new y(t,e.slice(1))]:"?"===i?[new f(t,e.slice(1),s)]:new p(t,e,s).parts}handleTextExpression(t){return new v(t)}},N=(t,...e)=>new u(t,e,"html",b);void 0===window.ShadyCSS||void 0===window.ShadyCSS.prepareTemplateDom&&console.warn("Incompatible ShadyCSS version detected.Please update to at least @webcomponents/webcomponentsjs@2.0.2 and@webcomponents/shadycss@1.3.1.");new Promise(t=>t(!0));const V=N`
  <style title="Common styles">
    :host{
      --dashed-primary-color: rgba(54, 54, 231, 1);
      --dashed-primary-light-color: rgba(54, 54, 231, 0.15);

      --dashed-danger-color: rgba(250, 50, 50, 1);
      --dashed-danger-light-color: rgba(250, 50, 50, 0.15);

      --dashed-success-color: rgba(31, 141, 87, 1);
      --dashed-success-light-color: rgba(31, 141, 87, 0.15);

      --dashed-fill-color: var(--dashed-primary-light-color);
      --dashed-outline-color: rgba(129, 129, 193);
      z-index: 1;
    }

    :host(:focus) svg.dash {
      outline: 1px solid var(--dashed-outline-color);
      outline-offset: 1px;
    }

    :host([disabled]) {
      opacity: 0.6;
      pointer-events: none;
    }

    svg.dash {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      fill: none;
      z-index: -1;
    }

    svg.dash .border {
      stroke: var(--dashed-primary-color);
      fill: var(--dashed-fill-color);
    }

    svg.dash .border-bottom {
      stroke: var(--dashed-primary-color);
    }

    svg.dash .background {
      fill: var(--dashed-fill-color);
    }
  </style>
`,w='\n  <style title="Common styles">\n    :host{\n      --dashed-primary-color: rgba(54, 54, 231, 1);\n      --dashed-primary-light-color: rgba(54, 54, 231, 0.15);\n\n      --dashed-danger-color: rgba(250, 50, 50, 1);\n      --dashed-danger-light-color: rgba(250, 50, 50, 0.15);\n\n      --dashed-success-color: rgba(31, 141, 87, 1);\n      --dashed-success-light-color: rgba(31, 141, 87, 0.15);\n\n      --dashed-fill-color: var(--dashed-primary-light-color);\n      --dashed-outline-color: rgba(129, 129, 193);\n      z-index: 1;\n    }\n\n    :host(:focus) svg.dash {\n      outline: 1px solid var(--dashed-outline-color);\n      outline-offset: 1px;\n    }\n\n    :host([disabled]) {\n      opacity: 0.6;\n      pointer-events: none;\n    }\n\n    svg.dash {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      fill: none;\n      z-index: -1;\n    }\n\n    svg.dash .border {\n      stroke: var(--dashed-primary-color);\n      fill: var(--dashed-fill-color);\n    }\n\n    svg.dash .border-bottom {\n      stroke: var(--dashed-primary-color);\n    }\n\n    svg.dash .background {\n      fill: var(--dashed-fill-color);\n    }\n  </style>\n';export{V as dashedStyles,w as dashedStylesString};
