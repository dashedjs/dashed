const n='\n  <style title="Common styles">\n    :host{\n      --dashed-primary-color: rgba(54, 54, 231, 1);\n      --dashed-primary-light-color: rgba(54, 54, 231, 0.15);\n\n      --dashed-danger-color: rgba(250, 50, 50, 1);\n      --dashed-danger-light-color: rgba(250, 50, 50, 0.15);\n\n      --dashed-success-color: rgba(31, 141, 87, 1);\n      --dashed-success-light-color: rgba(31, 141, 87, 0.15);\n\n      --dashed-fill-color: var(--dashed-primary-light-color);\n      --dashed-outline-color: rgba(129, 129, 193);\n      z-index: 1;\n    }\n\n    :host(:focus) > * {\n      outline: 1px solid var(--dashed-outline-color);\n      outline-offset: 1px;\n    }\n\n    :host([disabled]) {\n      opacity: 0.6;\n      pointer-events: none;\n    }\n\n    svg.dash {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      fill: none;\n      z-index: -1;\n    }\n\n    svg.dash .border {\n      stroke: var(--dashed-primary-color);\n      fill: var(--dashed-fill-color);\n    }\n\n    svg.dash .border-bottom {\n      stroke: var(--dashed-primary-color);\n    }\n\n    svg.dash .background {\n      fill: var(--dashed-fill-color);\n    }\n  </style>\n',t='\n  <svg width="24" height="24" viewBox="0 0 24 24" stroke="currentColor" class="icon menu-icon">\n    <path d="M2 6h20 M2 12h20 M2 18h20" stroke-width="2" stroke-dasharray="6 1"/>\n  </svg>\n',e='\n  <svg viewBox="0 0 24 24" class="icon github-icon">\n    <title id="simpleicons-github-icon">GitHub icon</title>\n    <path d="M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12"/>\n  </svg>\n';class i extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open",delegatesFocus:!0}),this.navItems=[{text:"Getting started",href:"#"},{text:"Components",href:"#"},{text:"Playground",href:"#"}],this.dashWidth="1",this.dashLength="4",this.dashSpacing="4"}get navItems(){return this._navItems}set navItems(n){this._navItems=n}get logo(){return this._logo}set logo(n){this._logo=n}get iconLeft(){return this._iconLeft}set iconLeft(n){this._iconLeft=n}get iconRight(){return this._iconRight}set iconRight(n){this._iconRight=n}get dashWidth(){return this.getAttribute("dash-width")}set dashWidth(n){this.setAttribute("dash-width",n)}get dashLength(){return this.getAttribute("dash-length")}set dashLength(n){this.setAttribute("dash-length",n)}get dashSpacing(){return this.getAttribute("dash-spacing")}set dashSpacing(n){this.setAttribute("dash-spacing",n)}connectedCallback(){this.render(),this._menuButton=this.shadowRoot.querySelector("#menubutton"),this._menuButton.addEventListener("click",this._toggleMenu.bind(this)),this._nav=this.shadowRoot.querySelector("nav"),this._menuItems=[...this._nav.querySelectorAll('a[role="menuitem"]')],this._menuItems.forEach(n=>n.addEventListener("click",this._activateLink.bind(this))),this._mediaQueryList=window.matchMedia("screen and (min-width: 600px)"),this._mediaQueryList.addListener(this._mediaQueryChange.bind(this)),this._mediaQueryChange(this._mediaQueryList),document.addEventListener("click",this._closeMenu.bind(this))}disconnectedCallback(){this._menuButton.removeEventListener("click",this._toggleMenu.bind(this)),this._menuItems.forEach(n=>n.removeEventListener("click",this._activateLink.bind(this))),this._mediaQueryList.removeListener(this._mediaQueryChange.bind(this)),document.removeEventListener("click",this._closeMenu.bind(this))}render(){const i=document.createElement("template");i.innerHTML=`\n      ${n}\n      <style>\n        :host {\n          --dashed-header-height: 56px;\n          --dashed-lightgrey: lightgrey;\n          --dashed-transition: all 0.28s cubic-bezier(0.4, 0, 0.2, 1);\n          --dashed-shadow-2:\n            0 2px 2px 0 rgba(10, 9, 9, 0.14),\n            0 1px 5px 0 rgba(0, 0, 0, 0.12),\n            0 3px 1px -2px rgba(0, 0, 0, 0.2);\n          --dashed-header-shadow: 0px 2px 2px -2px rgba(0, 0, 0, 0.7);\n\n          display: block;\n          position: sticky;\n          top: 0;\n        }\n\n        header {\n          height: var(--dashed-header-height);\n          display: grid;\n          grid-template-columns: max-content max-content auto max-content;\n  \n          border-bottom: ${this.dashWidth}px solid;\n          border-image: ${function(n,t,e,i="0"){const[s,a,o,r]=[n,t,e,i].map(n=>parseFloat(n)),h=s+r,d=s+r;return`url("data:image/svg+xml;utf8,${`\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      width='${o+a+2*s+2*r}'\n      height='${o+a+2*s+2*r}'\n      viewBox='0 0 ${o+a+2*s+2*r} ${o+a+2*s+2*r}'\n      stroke-width='${s}'\n      stroke='blue'>\n        <path\n          stroke-width='${s}'\n          d='M${s+r+o/2} ${s/2}h${a}m${o/2+r+s/2} ${s/2+r+o/2}v${a}m${-s/2-r-o/2} ${o/2+r+s/2}h${-a}m${-o/2-r-s/2} ${-s/2-r-o/2}v${-a}'/>\n\n        ${r>0?`<path\n              fill='none'\n              d='M${s/2} ${s+r-o/2}a${r} ${r} 0 0 1 ${s/2+r-o/2} ${-r-s/2+o/2}m${a+2*o} 0a${r} ${r} 0 0 1 ${r+s/2-o/2} ${s/2+r-o/2}m0 ${a+2*o}a${r} ${r} 0 0 1 ${-s/2-r+o/2} ${r+s/2-o/2}m${-a-2*o} 0a${r} ${r} 0 0 1 ${-r-s/2+o/2} ${-s/2-r+o/2}'/>`:""}\n    </svg>`.replace(/\n|\r|\t/gm,"")}") ${h} / ${d} round`}(this.dashWidth,this.dashLength,this.dashSpacing)};\n        }\n\n        header::before {\n          content: "";\n          position: absolute;\n          top: 0;\n          left: 0;\n          width: 100%;\n          height: 100%;\n          background: var(--dashed-primary-light-color);\n          z-index: -1;\n        }\n\n        button {\n          display: inline-block;\n          background: none;\n          cursor: pointer;\n          border: 0;\n          outline: 0;\n          padding: 8px 16px;\n        }\n\n        nav {\n          height: 100%;\n        }\n\n        /* Mobile navlist */\n        nav.sidebar {\n          position: fixed;\n          top: var(--dashed-header-height);\n          left: 0;\n          width: 60%;\n          height: 100%;\n          background: var(--dashed-lightgrey);\n          transition: var(--dashed-transition);\n          box-shadow: var(--dashed-shadow-2);\n          transform: translate3d(-100%, 0, 0);\n          will-change: transform;\n          z-index: 2;\n        }\n\n        nav.sidebar.open {\n          transform: translateX(0);\n        }\n\n        nav ul {\n          list-style: none;\n          margin: 0;\n          padding: 0;\n          width: 100%;\n          height: 100%;\n        }\n\n        ul li {\n          padding: 0 1rem;\n        }\n\n        li a:hover,\n        li a.active {\n          border-bottom-style: solid;\n          border-bottom: 2px solid inherit;\n        }\n\n        li a.active {\n          /* font-weight: bold; */\n        }\n\n        a {\n          padding-bottom: 4px;\n          text-decoration: none;\n          /* text-transform: uppercase; */\n          display: flex;\n          align-items: center;\n        }\n\n        a img.logo {\n          height: 32px;\n          margin: 4px;\n        }\n\n        svg.icon {\n          width: 24px;\n          height: 24px;\n          fill: var(--dashed-primary-color);\n          stroke: var(--dashed-primary-color);\n        }\n\n        svg.github-icon {\n          stroke: #000000;\n          fill: #000000;\n        }\n\n        @media screen and (min-width: 600px) {\n          .header {\n            grid-template-columns: max-content auto max-content max-content;\n          }\n\n          button#menubutton {\n            display: none;\n          }\n\n          /* Desktop navlist */\n          nav.topbar ul {\n            display: flex;\n            align-items: center;\n            justify-content: flex-end;\n          }\n        }\n      </style>\n      <header>\n        <button id="menubutton"\n          aria-expanded="false"\n          aria-controls="menu"\n          aria-label="Menu button">\n            ${t}\n        </button>\n        <a href="#">\n          <img class="logo" src="/src/assets/img/logo.png" alt="Dashedjs logo">\n          <h1 class="logo-text"></h1>\n        </a>\n        <div></div>\n        <nav class="sidebar" role="navigation">\n          <ul id="menu" role="menu" aria-labelledby="menubutton">\n            ${this.navItems.map(n=>`\n                <li role="none">\n                  <a role="menuitem" href="${n.href}">\n                  ${n.text}\n                  </a>\n                </li>`).join(" ")}\n          </ul>\n        </nav>\n        <button role="search" aria-label="search button">${e}</button>\n      </header>\n    `,this.shadowRoot.appendChild(i.content.cloneNode(!0))}_toggleMenu(n){this._nav.classList.contains("open")?this._closeMenu(n):this._openMenu(n)}_openMenu(n){n.stopPropagation(),this._nav.classList.add("open"),this._menuButton.setAttribute("aria-expanded","true")}_closeMenu(n){n.target!=this&&this._nav.classList.contains("open")&&(n.stopPropagation(),this._nav.classList.remove("open"),this._menuButton.setAttribute("aria-expanded","false"))}_activateLink(n){const t=this.shadowRoot.querySelector(".active");t&&t.classList.remove("active"),n.target.classList.add("active"),this._closeMenu(n)}_mediaQueryChange(n){n.matches?(this._nav.classList.remove("sidebar"),this._nav.classList.add("topbar")):(this._nav.classList.remove("topbar"),this._nav.classList.add("sidebar"))}}customElements.define("dashed-header",i);export{i as DashedHeader};
