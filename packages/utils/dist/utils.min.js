function t(t,s,a){const{width:e,height:i}=s,r=h(s,a);!function(t,h,s,a){const e=(Math.min(h,s)-a)/2;t.setAttribute("stroke-width",`${a}`),t.setAttribute("cx",`${h/2}`),t.setAttribute("cy",`${s/2}`),t.setAttribute("r",`${e}`)}(t,e,i,r.dashWidth);const{strokeDasharray:d,strokeDashOffset:o}=function(t,s){const{width:a,height:e}=t,{dashWidth:i,dashLength:r,dashRatio:d}=h(t,s),o=(Math.min(a,e)-i)/2,n=2*Math.PI*o,$=Math.floor((n-d*r)/((1+d)*r)),u=Math.round((n-$*r)/($+1)*Math.pow(10,3))/Math.pow(10,3);return{strokeDasharray:`${r} ${u}`,strokeDashOffset:"0",dashWidth:i}}(s,r);!function(t,h,s){t.setAttribute("stroke-dasharray",h),t.setAttribute("stroke-dashoffset",s)}(t,d,o)}function h(t,h){const{width:s,height:a}=t;let{dashWidth:e,dashLength:i,dashRatio:r}=h;if(e<0||i<0||r<0)throw new Error("dashWidth, dashLength and dashRatio must be positive numbers");const d=Math.min(s,a);return{dashWidth:e=e>d/2?d/2:e,dashLength:i=i>d?d:i,dashRatio:r=i*(1+r)>d?d-i:r}}function s(t,h,s){const{width:e,height:i}=h,r=a(h,s);!function(t,h,s,a){t.setAttribute("x1","0"),t.setAttribute("y1",`${s-a/2}`),t.setAttribute("x2",`${h}`),t.setAttribute("y2",`${s-a/2}`),t.setAttribute("stroke-width",`${a}`)}(t,e,i,r.dashWidth);const{strokeDasharray:d,strokeDashOffset:o}=function(t,h){const{width:s}=t,{dashWidth:e,dashLength:i,dashRatio:r}=a(t,h),d=1+Math.floor((s-i)/((1+r)*i)),o=Math.round((s-d*i)/(d-1)*Math.pow(10,3))/Math.pow(10,3);return{strokeDasharray:`${i} ${o}`,strokeDashOffset:"0",dashWidth:e}}(h,r);!function(t,h,s){t.setAttribute("stroke-dasharray",h),t.setAttribute("stroke-dashoffset",s)}(t,d,o)}function a(t,h){const{width:s}=t;let{dashWidth:a,dashLength:e,dashRatio:i}=h;if(a<0||e<0||i<0)throw new Error("dashWidth, dashLength and dashRatio must be positive numbers");return{dashWidth:a=a>s/2?s/2:a,dashLength:e=e>s?s:e,dashRatio:i=e*(1+i)>s?s-e:i}}function e(t,h,s){const{width:a,height:e,borderRadius:n}=h,$=i(h,s);!function(t,h,s,a,e){t.setAttribute("stroke-width",`${e}`),t.setAttribute("x",`${e/2}`),t.setAttribute("y",`${e/2}`),t.setAttribute("width",`${h-e}`),t.setAttribute("height",`${s-e}`),t.setAttribute("rx",`${a}`),t.setAttribute("ry",`${a}`)}(t,a,e,n,$.dashWidth);const{strokeDasharray:u,strokeDashOffset:f}=function(t,h){const{width:s,height:a,borderRadius:e}=t,{dashWidth:n,dashLength:$,dashRatio:u}=i(t,h),f=s-n-2*e,c=a-n-2*e,w=2*Math.PI*e/4,b=r(f,{dashWidth:n,dashLength:$,dashRatio:u}),g=r(c,{dashWidth:n,dashLength:$,dashRatio:u}),k=r(w,{dashWidth:n,dashLength:$,dashRatio:u}),A=d(f,b,$),W=d(c,g,$),m=d(w,k,$),M=o(b,A,m,$),R=o(k,m,W,$),L=o(g,W,m,$),p=o(k,m,A,$);return{strokeDasharray:`${M}${R}${L}${p}`.trim(),strokeDashOffset:`${-A}`,dashWidth:n}}(h,$);!function(t,h,s){t.setAttribute("stroke-dasharray",h),t.setAttribute("stroke-dashoffset",s)}(t,u,f)}function i(t,h){const{width:s,height:a}=t;let{dashWidth:e,dashLength:i,dashRatio:r}=h;if(e<0||i<0||r<0)throw new Error("dashWidth, dashLength and dashRatio must be positive numbers");const d=Math.min(s,a);return{dashWidth:e=e>d/2?d/2:e,dashLength:i=i>d?d:i,dashRatio:r=i*(1+r)>d?d-i:r}}function r(t,h){const{dashLength:s,dashRatio:a}=h;return t-a*s<=0?0:Math.floor((t-a*s)/((1+a)*s))}function d(t,h,s){return 0===h?t/2:Math.round((t-h*s)/(h+1)*Math.pow(10,3))/Math.pow(10,3)}function o(t,h,s,a){return 0===t?`0 ${h+s} `:`${a} ${h} `.repeat(t-1)+`${a} ${h+s} `}function n(t,h,s,a){return`url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='${s+h+2*t+2*a}' height='${s+h+2*t+2*a}' viewBox='0 0 ${s+h+2*t+2*a} ${s+h+2*t+2*a}' stroke-width='${t}' stroke='blue'><path stroke-width='${t}' d='M${t+a+s/2} ${t/2}h${h}m${s/2+a+t/2} ${t/2+a+s/2}v${h}m${-t/2-a-s/2} ${s/2+a+t/2}h${-h}m${-s/2-a-t/2} ${-t/2-a-s/2}v${-h}'/>${a>0?`<path fill='none' d='M${t/2} ${t+a-s/2}a${a} ${a} 0 0 1 ${t/2+a-s/2} ${-a-t/2+s/2}m${h+2*s} 0a${a} ${a} 0 0 1 ${a+t/2-s/2} ${t/2+a-s/2}m0 ${h+2*s}a${a} ${a} 0 0 1 ${-t/2-a+s/2} ${a+t/2-s/2}m${-h-2*s} 0a${a} ${a} 0 0 1 ${-a-t/2+s/2} ${-t/2-a+s/2}'/>`:""}</svg>")`}export{t as drawDashedCircle,s as drawDashedLine,e as drawDashedRect,n as borderImageSource};
