const n='\n  <style title="Common styles">\n    :host{\n      --dashed-primary-color: rgba(54, 54, 231, 1);\n      --dashed-primary-light-color: rgba(54, 54, 231, 0.15);\n\n      --dashed-danger-color: rgba(250, 50, 50, 1);\n      --dashed-danger-light-color: rgba(250, 50, 50, 0.15);\n\n      --dashed-success-color: rgba(31, 141, 87, 1);\n      --dashed-success-light-color: rgba(31, 141, 87, 0.15);\n\n      --dashed-fill-color: var(--dashed-primary-light-color);\n      --dashed-outline-color: rgba(129, 129, 193);\n      z-index: 1;\n    }\n\n    :host(:focus) svg.dash {\n      outline: 1px solid var(--dashed-outline-color);\n      outline-offset: 1px;\n    }\n\n    :host([disabled]) {\n      opacity: 0.6;\n      pointer-events: none;\n    }\n\n    svg.dash {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      fill: none;\n      z-index: -1;\n    }\n\n    svg.dash .border {\n      stroke: var(--dashed-primary-color);\n      fill: var(--dashed-fill-color);\n    }\n\n    svg.dash .border-bottom {\n      stroke: var(--dashed-primary-color);\n    }\n\n    svg.dash .background {\n      fill: var(--dashed-fill-color);\n    }\n  </style>\n';class o extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open",delegatesFocus:!0}),this.dashProps={dashWidth:2,dashLength:20,dashRatio:.1}}connectedCallback(){this.drawDash(),window.addEventListener("resize",this.drawDash.bind(this))}disconnectedCallback(){window.removeEventListener("resize",this.drawDash.bind(this))}render(){const o=document.createElement("template");o.innerHTML=`\n      ${n}\n      <style>\n        :host {\n          --dashed-footer-min-width: 256px;\n          --dashed-footer-max-width: 512px;\n\n          display: inline-flex;\n          align-items: center;\n          justify-content: center;\n          position: relative;\n          cursor: inherit;\n          outline: none;\n          min-width: var(--dashed-footer-min-width);\n          max-width: var(--dashed-footer-max-width);\n        }\n\n\n        .footer {\n          display: inline-block;\n          position: relative;\n          width: 100%;\n          height: 100%;\n          padding: 10px;\n        }\n\n        .footer__title {\n        }\n\n        .footer__content {\n        }\n\n        .footer__footer {\n          display: flex;\n          justify-content: flex-end;\n        }\n\n        .footer__footer__button {\n          display: inline-block;\n          cursor: pointer;\n        }\n      </style>\n      <div class="footer">\n        <h4 class="footer__title">Footer title</h3>\n        <h5 class="footer__subtitle">Footer subtitle</h5>\n        <div class="footer__content">\n          This is the footer content. This is a text divlacehoder.\n          <p>It can grow at will</p>\n        </div>\n        <div class="footer__footer">\n          <small>Here the footer footer</small>\n          <button class="footer__footer__button">button1</button>\n          <button class="footer__footer__button">button2</button>\n        </div>\n        <svg class="dash" filter="url(#shadow2)">\n          <rect class="border" />\n          <filter id="shadow2">\n            <feDropShadow dx="0" dy="2" stdDeviation="2" flood-opacity="0.3" />\n          </filter>\n        </svg>\n      </div>\n    `,this.shadowRoot.appendChild(o.content.cloneNode(!0))}drawDash(){}}customElements.define("dashed-footer",o);export{o as DashedFooter};
